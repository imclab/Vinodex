// Generated by IcedCoffeeScript 1.3.1c
(function() {
  var Backend, Resource, iced, __iced_k, __iced_k_noop,
    __slice = [].slice;

  iced = {
    Deferrals: (function() {

      function _Class(_arg) {
        this.continuation = _arg;
        this.count = 1;
        this.ret = null;
      }

      _Class.prototype._fulfill = function() {
        if (!--this.count) return this.continuation(this.ret);
      };

      _Class.prototype.defer = function(defer_params) {
        var _this = this;
        ++this.count;
        return function() {
          var inner_params, _ref;
          inner_params = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
          if (defer_params != null) {
            if ((_ref = defer_params.assign_fn) != null) {
              _ref.apply(null, inner_params);
            }
          }
          return _this._fulfill();
        };
      };

      return _Class;

    })(),
    findDeferral: function() {
      return null;
    }
  };
  __iced_k = __iced_k_noop = function() {};

  Resource = (function() {

    function Resource(api_endpoint_url, backend) {
      this.api_endpoint_url = api_endpoint_url;
      this.backend = backend;
    }

    Resource.prototype.get = function(filters, callback, limit) {
      if (filters == null) filters = {};
      if (limit == null) limit = 20;
      filters.limit = limit;
      return backend.get(this.api_endpoint_url, filters, callback);
    };

    Resource.prototype["delete"] = function(id, callback) {
      return backend["delete"]("" + this.api_endpoint_url + "/" + id, callback);
    };

    Resource.prototype.create = function(object, callback) {
      if (object == null) object = {};
      return backend.post(this.api_endpoint_url, object, callback);
    };

    Resource.prototype.update = function(id, options, callback) {
      return backend.put("" + this.api_endpoint_url + "/" + id, options, callback);
    };

    return Resource;

  })();

  Backend = (function() {

    function Backend(server_url) {
      this.server_url = server_url;
      this.Bottle = new Resource("/api/v1/bottle/");
      this.Cellar = new Resource("/api/v1/cellar/");
      this.Winery = new Resource("/api/v1/winery/");
      this.Wine = new Resource("/api/v1/wine/");
      this.Annotation = new Resource("/api/v1/annotation/");
      this.Sommeilier = new Resource("/api/v1/sommeilier/");
    }

    Backend.prototype.handleApiResponseForOneElement = function(response, callback) {
      var objects;
      objects = response.objects;
      if (objects.length === 0) {
        throw "No Object was returned";
      } else if (objects.length > 2) {
        console.warn("Only one object was queried for, but " + response.objects.length + " objects                    were returned");
        console.warn("Only using the first object");
      }
      return callback(objects[0]);
    };

    Backend.prototype.getUserInfo = function(userId, callback) {
      return $.get("/api/v1/profile", {
        "user_id": userId
      }, function(response) {
        return handleApiResponseForOneElement(response, callback);
      });
    };

    Backend.prototype.getMyCellars = function(callback) {
      return $.get("/api/v1/cellar", {
        "owner_id": userId,
        limit: 0
      }, function(response) {
        return callback(response.objects);
      });
    };

    Backend.prototype.get = function(uri, data, callback) {
      return $.get(this.server_url + uri, data, callback);
    };

    Backend.prototype.post = function(uri, data, callback) {
      return $.ajax({
        url: uri,
        contentType: "application/json",
        type: "POST",
        data: JSON.stringify(data),
        dataType: "json",
        processData: false,
        complete: callback
      });
    };

    Backend.prototype.put = function(uri, data, callback) {
      return $.ajax({
        url: uri,
        contentType: "application/json",
        type: "PUT",
        data: JSON.stringify(data),
        dataType: "json",
        processData: false,
        complete: callback
      });
    };

    Backend.prototype["delete"] = function(uri, callback) {
      return $.ajax({
        url: uri,
        type: "DELETE",
        complete: callback,
        dataType: "json"
      });
    };

    Backend.prototype.createUserAccount = function(name, email, password) {
      var account, user, ___iced_passed_deferral, __iced_deferrals, __iced_k,
        _this = this;
      __iced_k = __iced_k_noop;
      ___iced_passed_deferral = iced.findDeferral(arguments);
      account = {
        "name": name,
        "email": email,
        "password": password
      };
      (function(__iced_k) {
        __iced_deferrals = new iced.Deferrals(__iced_k, {
          parent: ___iced_passed_deferral,
          filename: "/Users/zgrannan/Dropbox/cse110/Frontend/coffee/backend.iced",
          funcname: "Backend.createUserAccount"
        });
        _this.post("" + _this.server_url + "/api/v1/profile/", account, __iced_deferrals.defer({
          assign_fn: (function() {
            return function() {
              return user = arguments[0];
            };
          })(),
          lineno: 88
        }));
        __iced_deferrals._fulfill();
      })(function() {
        console.log(user);
        window.user = user;
        return $.cookie("user", user.id);
      });
    };

    Backend.prototype.createCellar = function(name, location, point, callback) {
      var cellar;
      cellar = {
        "owner": {
          pk: window.userId
        },
        "name": name,
        "location": location,
        "point": point || void 0
      };
      return this.post("/api/v1/cellar/", cellar, callback);
    };

    return Backend;

  })();

  window.backend = new Backend("http://localhost:8000");

}).call(this);
